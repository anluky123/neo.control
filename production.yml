version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_nginx_media: {}
  production_nginx_static: {} 

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: neocontrol_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    volumes:
      - production_nginx_media:/app/elopub/media:z
      - production_nginx_static:/app/elopub/static:z

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: neocontrol_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    shm_size: '3gb'
    command: postgres -c 'max_connections=1000'
    logging:
      driver: none

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: neocontrol_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
      - ./elopub/media/tr_logs/:/elopub/media/tr_logs/
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  nginx-media:
    image: "nginx:latest"
    depends_on:
      - django
    volumes:
      - production_nginx_media:/usr/share/nginx/html/media:z
      - production_nginx_static:/usr/share/nginx/html/static:z


  redis:
    image: redis:6
